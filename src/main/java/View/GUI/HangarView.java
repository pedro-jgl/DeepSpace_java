/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.GUI;

import controller.Controller;
import deepspace.HangarToUI;
import java.util.ArrayList;
import java.awt.Component;

/**
 *
 * @author pedrojgl
 */
public class HangarView extends javax.swing.JPanel {
    
    /**
     * Creates new form HangarView
     */
    public HangarView() {
        initComponents();
    }

    public void setHangarView(HangarToUI hangarui){
        
        if(hangarui == null){
            setVisible(false);
        }
        else{
            hangar_panel.removeAll();
            for(int i=0; i<hangarui.getWeapons().size(); i++){
                //Se modifica los anteriores al crear uno nuevo?¿
                WeaponView weapv = new WeaponView();
                weapv.setWeaponView(hangarui.getWeapons().get(i));
                hangar_panel.add(weapv);
            }
        
            for(int i=0; i<hangarui.getShieldBoosters().size(); i++){
                //Se modifica los anteriores al crear uno nuevo?¿
                ShieldView shieldv = new ShieldView();
                shieldv.setShieldView(hangarui.getShieldBoosters().get(i));
                hangar_panel.add(shieldv);
            }
            
            
            repaint();
            revalidate();
            
            setVisible(true);
        
        }
    }
    
    void getSelectedInHangar(ArrayList<Integer> weaponsSelected, ArrayList<Integer> shieldsSelected){
        int numWeapons = Controller.getInstance().getUIversion().getCurrentStation().getHangar().getWeapons().size();
        int numShields = Controller.getInstance().getUIversion().getCurrentStation().getHangar().getShieldBoosters().size();
        
        
        for(int i=0; i<numWeapons; i++){
            Component c = hangar_panel.getComponent(i);
            if(((CombatElementView) c).isSelected()){
                weaponsSelected.add(i);
            }
        }
        
        for(int i=0; i<numShields; i++){
            Component c = hangar_panel.getComponent(i+numWeapons);
            if(((CombatElementView) c).isSelected()){
                shieldsSelected.add(i);
            }
        }
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hangar_panel = new javax.swing.JPanel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hangar_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 794, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hangar_panel, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel hangar_panel;
    // End of variables declaration//GEN-END:variables
}
